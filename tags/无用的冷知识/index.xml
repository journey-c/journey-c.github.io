<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
<channel>
  <title>无用的冷知识 on Journey-C</title>
  <link>https://journey-c.github.io/tags/%E6%97%A0%E7%94%A8%E7%9A%84%E5%86%B7%E7%9F%A5%E8%AF%86/</link>
  <description>Recent content in 无用的冷知识 on Journey-C</description>
  <generator>Hugo -- gohugo.io</generator>
  
  <language>en-us</language>
  
  
  
  
  <lastBuildDate>Fri, 01 Jan 2021 20:58:31 +0800</lastBuildDate>
  
      <atom:link href="https://journey-c.github.io/tags/%E6%97%A0%E7%94%A8%E7%9A%84%E5%86%B7%E7%9F%A5%E8%AF%86/index.xml" rel="self" type="application/rss+xml" />
  
  
  <item>
    <title>为什么redis有多个数据库?</title>
    <link>https://journey-c.github.io/why-redis-has-multiple-databases/</link>
    <pubDate>Fri, 01 Jan 2021 20:58:31 +0800</pubDate>
    
    <guid>https://journey-c.github.io/why-redis-has-multiple-databases/</guid>
    <description>&lt;h1 id=&#34;概述&#34;&gt;概述&lt;/h1&gt;
&lt;p&gt;&lt;a href=&#34;https://zh.wikipedia.org/wiki/Redis&#34;&gt;Redis&lt;/a&gt;是一个开源内存数据库，在今天几乎每个服务端程序员都会或多或少的使用到。但是很少有人会注意到一个Redis实例并不是只有一个数据库。&lt;/p&gt;
&lt;h1 id=&#34;设计&#34;&gt;设计&lt;/h1&gt;
&lt;p&gt;Redis实例使用&lt;a href=&#34;https://github.com/redis/redis/blob/25214bd7dc2f4c995d76020e95180eb4e6d51672/src/server.h#L1055&#34;&gt;redisServer&lt;/a&gt;结构体表示，结构体成员变量中的&lt;a href=&#34;https://github.com/redis/redis/blob/25214bd7dc2f4c995d76020e95180eb4e6d51672/src/server.h#L1068&#34;&gt;redisDb *db;&lt;/a&gt;是redisServer用来存储用户存入的键值。(默认有16个，通过配置文件中databases配置。每个客户端可以通过&lt;code&gt;SELECT index&lt;/code&gt;命令选择要访问的数据库)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/redis/redis/blob/25214bd7dc2f4c995d76020e95180eb4e6d51672/src/server.h#L1068&#34;&gt;redisDb *db&lt;/a&gt;成员变量如下图最右边方框。&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://journey-c.github.io/images/server_data_structure.png&#34;&gt;
&lt;img src=&#34;https://journey-c.github.io/images/server_data_structure.png&#34; alt=&#34;server&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;h1 id=&#34;分析&#34;&gt;分析&lt;/h1&gt;
&lt;h2 id=&#34;数据分块优化查询速度&#34;&gt;数据分块优化查询速度?&lt;/h2&gt;
&lt;p&gt;将数据分块添加多级索引，但是找了很多地方发现每个db都是独立的，而且客户端对单个数据库操作时不会访问其他数据库，并且其他客户端无关操作例如RDB、AOF持久化操作也不会将各db关联起来。&lt;/p&gt;
&lt;p&gt;并且redisdb中的dict本身就会在数据增多时对数据进行rehash，所以这个可能大概率不存在。&lt;/p&gt;
&lt;h2 id=&#34;对数据进行分类&#34;&gt;对数据进行分类?&lt;/h2&gt;
&lt;p&gt;redis本身是一个nosql数据库，想查询部分特征的数据本身操作会非常复杂，所以可能作者想用户可以根据需要将不同数据存入不同的db，但是db本身不支持自定义名称，只有编号，用户如果想将数据分类只能记住db的编号，每次访问数据时先用&lt;code&gt;SELECT index&lt;/code&gt;命令切换数据库然后再操作。这个可能性很高，但也说服力不强。&lt;/p&gt;
&lt;p&gt;因为实在没有想到其他的可能，所以我开始在网上找一下其他同行对此的见解，意外的搜到了作者一封邮件&amp;hellip;&lt;/p&gt;
&lt;p&gt;
&lt;div class=&#34;post-img-view&#34;&gt;
&lt;a data-fancybox=&#34;gallery&#34; href=&#34;https://journey-c.github.io/images/mail.jpeg&#34;&gt;
&lt;img src=&#34;https://journey-c.github.io/images/mail.jpeg&#34; alt=&#34;mail&#34;  /&gt;
&lt;/a&gt;
&lt;/div&gt;

&lt;/p&gt;
&lt;p&gt;原来作者最初的想法很多，但最后觉得很鸡肋，由于要保持向下兼容，所以就保留了这个功能。虽然实际生产中Redis实例很少会用到多个DB，但每个DB大概1m左右也不是十分耗费资源，所以无伤大雅。&lt;/p&gt;
</description>
  </item>
  
</channel>
</rss>
